{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".no-overflow {\\n    width: 100%;\\n    height: 100vh;\\n    overflow: hidden;\\n}\"","module.exports = \"<div class=\\\"no-overflow\\\">\\n  <app-login></app-login>\\n  \\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'ngx-wellness-evoucher';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http'\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".fog-low{\\n    z-index: -1;\\n    max-height: 20vh;\\n}\\n.register-form .input-group {\\n    margin-bottom: 7px;\\n}\\n.logo img{\\n    border-radius: 10px;\\n}\\n.moving-clouds {\\n    height: 1000px;\\n}\\n.white-text {\\n    color: white;\\n}\\n.red-text {\\n    color: red;\\n}\\n.btn-magenta {\\n    background-color: #8f2f7e;\\n    color: white;\\n}\\niframe {\\n    width: 100%;\\n    height: 100vh;;\\n}\"","module.exports = \"<div *ngIf=\\\"!success\\\" class=\\\"wrapper\\\">\\n  <div class=\\\"page-header section-dark\\\" style=\\\"background-image: url('assets/img/antoine-barres.jpg')\\\">\\n    <div class=\\\"filter\\\"></div>\\n    <div class=\\\"content-center\\\" style=\\\"z-index: 900;\\\">\\n      <div class=\\\"container\\\">\\n        <div class=\\\"title-brand\\\">\\n          <div class=\\\"angular-logo\\\">\\n          </div>\\n          <div class=\\\"fog-low\\\">\\n            <img src=\\\"assets/img/fog-low.png\\\" alt=\\\"\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"text-center logo\\\"><img width=\\\"40%\\\" src=\\\"https://www.magenta-wellness.com/assets/evoucher/img/logo.jpg\\\" /></div>\\n        <h2 class=\\\"{{messageColor}}-text text-center\\\">{{message}}</h2>\\n        <form class=\\\"register-form\\\">\\n          <div class=\\\"input-group form-group-no-border\\\">\\n            <input type=\\\"text\\\" name=\\\"companyCode\\\" [(ngModel)]=\\\"companyCode\\\" class=\\\"form-control\\\" placeholder=\\\"Company Code\\\">\\n          </div>\\n          <div class=\\\"input-group form-group-no-border\\\">\\n            <input type=\\\"text\\\" name=\\\"nric\\\" [(ngModel)]=\\\"nric\\\" class=\\\"form-control\\\" placeholder=\\\"NRIC/Work Permit Number\\\">\\n          </div>\\n          <div class=\\\"input-group form-group-no-border\\\">\\n            <div class=\\\"input-group date\\\">\\n              <input type=\\\"date\\\" name=\\\"birthDay\\\" [(ngModel)]=\\\"birthDay\\\" class=\\\"form-control\\\" placeholder=\\\"Date of Birth\\\">\\n            </div>\\n          </div>\\n          <button class=\\\"btn btn-magenta btn-block btn-round\\\" (click)=\\\"login()\\\">Register</button>\\n        </form>\\n      </div>\\n    </div>\\n    <div class=\\\"moving-clouds\\\" style=\\\"background-image: url('assets/img/clouds.png'); \\\"></div>\\n  </div>\\n</div>\\n<iframe *ngIf=\\\"success\\\" src=\\\"https://magenta-wellness.com/evoucher/DKI4/RJCA-01CI-NCEL\\\" frameborder=\\\"0\\\"></iframe>\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../services/user.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n  companyCode: string;\n  nric: string;\n  birthDay: Date;\n\n  message: string = \"Sign in with your NRIC and Date of Birth\";\n  success: boolean = false;\n  messageColor: string = 'white';\n\n  constructor(\n    private userService: UserService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  login() {\n    console.log(this.companyCode, this.nric, this.birthDay);\n    if (this.birthDay && this.companyCode && this.nric) {\n      let username = `${this.companyCode}@at@${this.nric}`;\n      let password = this.birthDay.toString();\n      console.log(username, password);\n      this.userService.checkLogin(username, password).subscribe(res => {\n        console.log(res);\n      }) \n    }\n\n    if (this.nric) {\n      this.success = true;      \n    } else {\n      this.success = false;\n      this.message = \"Incorrect credential\";\n      this.messageColor = \"red\";\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  readonly loginUrl = '/login_check_org_code_nric';\n  readonly headers = new HttpHeaders({\n    // 'Content-Type': 'multipart/form-data'\n  })\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  checkLogin(username, password): Observable<any> {\n    return this.http.post(`${environment.apiEndPoint}${this.loginUrl}`, {\n      _username: username,\n      _password: password\n    }, {\n      headers: this.headers\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiEndPoint: 'http://dev-book.magentapulse.com/api'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}